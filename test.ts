// test.ts
import { parseClient } from './src/services/parseClient';

// Fun√ß√£o principal de teste (ass√≠ncrona para usar await)
async function testUserUpdate() {
  console.log('üß™ Iniciando o teste de atualiza√ß√£o...');

  // 1. Define os novos dados que ser√£o enviados para atualiza√ß√£o
  const updatedInfo = {
    id: 3, // ID do usu√°rio a ser atualizado
    // O ID √© necess√°rio para identificar qual usu√°rio atualizar
    // e deve ser o mesmo que o mockUser.id
    name: 'Nome Novo em Folha',
    email: '',

  };

  console.log('\nEnviando os seguintes dados para o m√©todo put:', updatedInfo);

  // 2. Chama o m√©todo 'put' do seu cliente
  const response = await parseClient.put('/users/me', updatedInfo);

  console.log('\n‚úÖ Resposta recebida da API:');
  console.log(response);

// 3. Verifica se os dados retornados est√£o corretos
  console.log('\n--- Verifica√ß√£o Final ---');
  if (response.data && response.data.name === 'Nome Novo em Folha') {
    console.log('üëç SUCESSO! O objeto retornado cont√©m os dados atualizados.');
  } else {
    console.log('üëé FALHA! O objeto retornado n√£o foi atualizado corretamente.');
  }
}

// Executa o teste
  // comando para teste: ts-node test
testUserUpdate();
